# helpful link:
#https://stackoverflow.com/questions/27644586/how-to-set-up-travis-ci-with-multiple-languages

language: cpp
sudo: required
matrix:
  include:
    - compiler: gcc
      # "dist" specifies the operating system ("bionic"=ubuntu18.04)
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packagees:
            - g++-5
            - cmake
            - cmake-data
            - libgtest-dev
      env: COMPILER=g++-5
      #install:
      #  - sudo apt-get install valgrind
      #  Optional: To test the output of your program after running, you can use
      #  - git clone https://github.com/kward/shunit2 shunit2

        #- g++ -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- ./lambda_lanczos_test
        # ---- Optional: Code-coverage tests: ----
        #- g++ -g -O0 -coverage -fno-inline -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- ./lambda_lanczos_test
        # ---- Optional: check for memory errors (probably not needed) ----
        #- g++ -g -O0  -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- valgrind --leak-check=yes --error-exitcode=1 ./lambda_lanczos_test

      #after_success:
      # ---- Optional: Report code-coverage test results to codecov.io ----
      #  - bash <(curl -s https://codecov.io/bash)


    #- language: cpp
      #compiler: clang
      # "dist" specifies the operating system ("bionic"=ubuntu18.04)
      #dist: bionic
      #install:
      #  - sudo apt-get install valgrind
      #  Optional: To test the output of your program after running, you can use
      #  - git clone https://github.com/kward/shunit2 shunit2
      #script:
        #- clang++ -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- ./lambda_lanczos_test
        # ---- Optional: Code-coverage tests: ----
        #- clang++ -g -O0 -coverage -fno-inline -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- ./lambda_lanczos_test
        # ---- Optional: check for memory errors (probably not needed) ----
        #- clang++ -g -O0  -std=c++14 -I./include ./src/lambda_lanczos_test/lambda_lanczos_test.cpp -o lambda_lanczos_test
        #- valgrind --leak-check=yes --error-exitcode=1 ./lambda_lanczos_test
      #after_success:
      # ---- Optional: Report code-coverage test results to codecov.io ----
      #  - bash <(curl -s https://codecov.io/bash)

before_scipt:
  - mkdir -p gtest_build
  - pushd gtest_build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER /usr/src/gtest/
  - make
  - sudo cp *.a /usr/lib
  - popd
script:
  - mkdir -p build
  - cd build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER ..
  - make lambda_lanczos_test
  - ctest --verbose
